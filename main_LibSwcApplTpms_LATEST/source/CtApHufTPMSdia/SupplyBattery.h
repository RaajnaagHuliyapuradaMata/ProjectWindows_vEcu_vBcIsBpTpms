/************************************************************************************************************
 * (c) HuF Hülsbeck & Fürst GmbH Co.KG      Abteilung PDSTPS     2016
 ************************************************************************************************************/
/*********************************************************************************************************//**
 * \file SupplyBatterie.c
 * \brief Manager 4 SupplyBatterie SG + PN14_SupBat_Stat (Supply battery voltage diagnostic)
 *
 *------------------------------------------------------------------------------------------------------------
 * Global Description
 * 
 *
 *
 *
 *
 *------------------------------------------------------------------------------------------------------------
 * Modul Description
 * 
 *
 * Purpose:
 *
 *
 *
 *------------------------------------------------------------------------------------------------------------
 */

/* double include prevention */
#ifndef _SUPPLYBATTERY_H
# define _SUPPLYBATTERY_H



/************************************************************************************************************
 *                                             include
 ************************************************************************************************************/
#include "Platform_Types.h"


/************************************************************************************************************
 *                                             macro
 ************************************************************************************************************/
#define cKL30_HIGH_LIMIT				(uint16) 160 /*CRS_1211_050_004 160= 16V Kl.30 max bordvoltage ..5.01_V.80.cdd SET U>16V for 15sec*/
#define cKL30_LOW_LIMIT					(uint16) 90  /*CRS_1211_050_004 90= 9V Kl.30 min bordvoltage ..5.01_V.80.cdd SET U<9V for 15sec*/	
#define cKL30_LOW_LOW_LIMIT			(uint16) 75  /*CRS_1211_050_004 75= 7,5V Kl.30 min bordvoltage*/	

#define cKL30_HIGH_LIMIT_RES		(uint16) 155 /*CRS_1211_050_004 155= 15,5V Kl.30 threshold for reset max bordvoltage..5.01_V.80.cdd RESET U<15,5V for 15sec*/	
#define cKL30_LOW_LIMIT_RES			(uint16) 95  /*CRS_1211_050_004 95= 9,5V Kl.30 threshold for reset min bordvoltage ..5.01_V.80.cdd RESET U>9,5V for 15sec*/	
			

#define cKL30_HIGH_LIMIT_KAZ		(uint8) 75		/*200msTask 1sec=5 15sec=75 CRS_1211_050_004 Karenz Zähler ..5.01_V.80.cdd RESET U<9V for 15sec*/
#define cKL30_LOW_LIMIT_KAZ			(uint8) 75		/*CRS_1211_050_004 Karenz Zähler ..5.01_V.80.cdd RESET U<9V for 15sec*/
#define cKL30_LOW_LOW_LIMIT_KAZ	(uint8) 2		/*CRS_1211_050_004 Karenz Zähler*/


#define cPN14_SUPBAT_INVALID						(uint8) 255 /*CRS_1211_050_020*/

#define cPN14_SUPBAT_HIGH_LIMIT					(uint8) 160 /*CRS_1211_050_020 160= 16V Kl.30 max bordvoltage ..5.01_V.80.cdd SET U>16V for 15sec*/
#define cPN14_SUPBAT_LOW_LIMIT					(uint8) 90  /*CRS_1211_050_020 90= 9V Kl.30 min bordvoltage ..5.01_V.80.cdd SET U<9V for 15sec*/	
#define cPN14_SUPBAT_LOW_LOW_LIMIT			(uint8) 75  /*CRS_1211_050_020 75= 7,5V Kl.30 min bordvoltage*/	

#define cPN14_SUPBAT_HIGH_LIMIT_RES			(uint8) 155 /*CRS_1211_050_020 155= 15,5V Kl.30 threshold for reset max bordvoltage..5.01_V.80.cdd RESET U<15,5V for 15sec*/	
#define cPN14_SUPBAT_LOW_LIMIT_RES			(uint8) 95  /*CRS_1211_050_020 95= 9,5V Kl.30 threshold for reset min bordvoltage ..5.01_V.80.cdd RESET U>9,5V for 15sec*/	

#define cPN14_SUPBAT_HIGH_LIMIT_KAZ			(uint8) 75	/*200msTask 1sec=5 15sec=75 CRS_1211_050_020 Karenz Zähler ..5.01_V.80.cdd RESET U<9V for 15sec*/
#define cPN14_SUPBAT_LOW_LIMIT_KAZ			(uint8) 75	/*CRS_1211_050_020 Karenz Zähler ..5.01_V.80.cdd RESET U<9V for 15sec*/
#define cPN14_SUPBAT_LOW_LOW_LIMIT_KAZ	(uint8) 2		/*CRS_1211_050_020 Karenz Zähler*/


/************************************************************************************************************
 *                                            typedef
 ************************************************************************************************************/

/************************************************************************************************************
 *                                    data (Modulglobal) - ROM
 ************************************************************************************************************/

/************************************************************************************************************
 *                                    data (Modulglobal) - RAM
 ************************************************************************************************************/

/************************************************************************************************************
 *                                       data (global) - ROM
 ************************************************************************************************************/

/************************************************************************************************************
 *                                       data (global) - RAM
 ************************************************************************************************************/

/***********************************************************************************************************
 *                                 prototype (local functions - private)
 ***********************************************************************************************************/

/***********************************************************************************************************
 *                                 prototype (local functions - public)
 ***********************************************************************************************************/
void CheckADCvalue4Kl30Diagnostic(uint16);
void CheckPN14SupBatState4SupplybatterieDiagnostic(uint8);
uint8 GetEvKl30DiagUnterSpgFZZ(void);

/************************************************************************************************************
 *                               prototype (external functions - interface)
 ************************************************************************************************************/

/************************************************************************************************************
 *                                             include
 ************************************************************************************************************/


#endif